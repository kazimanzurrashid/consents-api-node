apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 100Mi
  hostPath:
    path: /data/postgres
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
  volumeName: postgres
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres
type: Opaque
data:
  POSTGRES_USER: cG9zdGdyZXM=
  POSTGRES_PASSWORD: dGVzdDEyMw==
  POSTGRES_DB: consents
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14.4-alpine3.16
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_DB
          resources:
            requests:
              cpu: 50m
              memory: 300Mi
            limits:
              cpu: 300m
              memory: 500Mi
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: postgres
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: postgres
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: postgres
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - targetPort: 5432
      port: 5432
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      name: api
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: kazirashid/consents-node
          env:
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_PASSWORD
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: POSTGRES_DB
            - name: PGHOST
              value: postgres
            - name: PGPORT
              value: "5432"
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "3001"
          readinessProbe:
            httpGet:
              port: 3001
              path: /
            periodSeconds: 15
            initialDelaySeconds: 3
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 20m
              memory: 100Mi
            limits:
              cpu: 100m
              memory: 300Mi
          ports:
            - containerPort: 3001
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api
  minReplicas: 3
  maxReplicas: 12
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
---
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
spec:
  type: NodePort
  selector:
    app: api
  ports:
    - targetPort: 3001
      port: 3001
      protocol: TCP
      nodePort: 30100
