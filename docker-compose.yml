version: "3.8"
services:
  postgres:
    image: postgres:14.4-alpine3.16
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    ports:
      - "${PGPORT}:${PGPORT}"
    healthcheck:
      test: pg_isready -U ${PGUSER} -p ${PGPORT} -d ${PGDATABASE}
      interval: 3s
      timeout: 1s
    restart: on-failure
    volumes:
      - postgres-data:/var/lib/postgresql/data
  api:
    build:
      dockerfile: Dockerfile.dev
    command: npm run start
    environment:
      PGHOST: postgres
      PGPORT: ${PGPORT}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}
      NODE_ENV: development
      PORT: ${PORT}
    ports:
      - ${PORT}:${PORT}
    healthcheck:
      test: wget -q -O - --tries=1 http://localhost:${PORT}/health?detail=yes
      interval: 15s
      timeout: 1s
    restart: unless-stopped
    volumes:
      - .:/usr/app
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  postgres-data:
